{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","props","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","numbersOfPages","className","classNames","disabled","href","onClick","map","page","active","App","useState","setPerPage","setCurrentPage","firstItem","lastItem","min","itemsPerPage","id","value","onChange","event","target","htmlFor","current","item","ReactDOM","render","document","getElementById"],"mappings":"2MAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCIIG,EAAwB,SAACC,GACpC,IACEC,EAIED,EAJFC,MACAC,EAGEF,EAHFE,QACAC,EAEEH,EAFFG,YACAC,EACEJ,EADFI,aAGIC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAiBf,EAAW,EAAGY,GAErC,OACE,qBAAII,UAAU,aAAd,UACE,oBAAIA,UAAWC,IAAW,YAAa,CACrCC,SAA0B,IAAhBR,IADZ,SAIE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBT,EACfU,QAAS,WACa,IAAhBV,GACFC,EAAa,SAPnB,oBAcDI,EAAeM,KAAI,SAAAC,GAAI,OACtB,oBACEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASZ,IAFrB,SAKE,mBACE,UAAQ,WACRM,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,SAIP,oBAAIN,UAAWC,IAAW,YAAa,CACrCC,SAAUR,IAAgBE,IAD5B,SAIE,mBACE,UAAQ,WACRI,UAAU,YACVG,KAAK,QACL,gBAAeT,IAAgBE,EAC/BQ,QAAS,WACHV,IAAgBE,GAClBD,EAAa,SAPnB,wBCvDKa,EAAgB,WAC3B,MAA8BC,mBAAS,GAAvC,mBAAOhB,EAAP,KAAgBiB,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAOf,EAAP,KAAoBiB,EAApB,KACA,EAAgBF,mBAAS,IAAlBjB,EAAP,oBAEMoB,GAAalB,EAAc,GAAKD,EAAU,EAC1CoB,EAAWhB,KAAKiB,IAAIrB,EAAUC,EAAaF,GAC3CuB,EAAe/B,EAAW4B,EAAWC,GAiB3C,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWN,EADX,mBACiCkB,EADjC,cACgDC,EADhD,eAC+DrB,EAD/D,OAIA,sBAAKQ,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRgB,GAAG,kBACHhB,UAAU,eACViB,MAAOxB,EACPyB,SA9BiB,SAACC,GAC1BR,EAAe,GACfD,GAAYS,EAAMC,OAAOH,QAuBnB,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkBrB,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACER,MAAOA,EACPC,QAASA,EACTC,YAAaA,EACbC,aA3CqB,SAACW,GACN,kBAATA,EACTK,EAAeL,GACG,SAATA,EACTK,GAAe,SAAAW,GAAO,OAAIA,EAAU,KAClB,SAAThB,GACTK,GAAe,SAAAW,GAAO,OAAIA,EAAU,QAuCpC,6BACGP,EAAaV,KAAI,SAAAkB,GAAI,OACpB,oBAEE,UAAQ,OAFV,wBAIWA,IAHJA,YClEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.91057be1.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import classNames from 'classnames';\nimport { FC } from 'react';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number | string) => void,\n};\n\nexport const Pagination: FC<Props> = (props) => {\n  const {\n    total,\n    perPage,\n    currentPage,\n    onPageChange,\n  } = props;\n\n  const lastPage = Math.ceil(total / perPage);\n  const numbersOfPages = getNumbers(1, lastPage);\n\n  return (\n    <ul className=\"pagination\">\n      <li className={classNames('page-item', {\n        disabled: currentPage === 1,\n      })}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={() => {\n            if (currentPage !== 1) {\n              onPageChange('prev');\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n      {numbersOfPages.map(page => (\n        <li\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n      <li className={classNames('page-item', {\n        disabled: currentPage === lastPage,\n      })}\n      >\n        <a\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={currentPage === lastPage}\n          onClick={() => {\n            if (currentPage !== lastPage) {\n              onPageChange('next');\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { Pagination } from './components/Pagination';\nimport { getNumbers } from './utils';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n\nexport const App: React.FC = () => {\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [total] = useState(42);\n\n  const firstItem = (currentPage - 1) * perPage + 1;\n  const lastItem = Math.min(perPage * currentPage, total);\n  const itemsPerPage = getNumbers(firstItem, lastItem);\n\n  const handleItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setCurrentPage(1);\n    setPerPage(+event.target.value);\n  };\n\n  const handleOnPageChange = (page: number | string) => {\n    if (typeof page === 'number') {\n      setCurrentPage(page);\n    } else if (page === 'prev') {\n      setCurrentPage(current => current - 1);\n    } else if (page === 'next') {\n      setCurrentPage(current => current + 1);\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleItemsPerPage}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={handleOnPageChange}\n      />\n      <ul>\n        {itemsPerPage.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {`Item ${item}`}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}